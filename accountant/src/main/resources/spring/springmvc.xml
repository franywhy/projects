<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	
	<!-- 开启mcv注解 -->
	<mvc:annotation-driven />
	
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器，要有use-default-filters="false" -->
	<context:component-scan base-package="com.school.accountant.controller" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 配置文件引入 -->
	<context:property-placeholder location="classpath:application.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />
	
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
        <property name="supportedMediaTypes">
            <list>
	            <value>text/html;charset=UTF-8</value>
	            <value>application/json;charset=UTF-8</value>
            </list>
        </property>  
    </bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器   -->
            </list>
        </property>
    </bean>
    
    <mvc:annotation-driven>
    	<mvc:message-converters register-defaults="true">
    		<bean class="org.springframework.http.converter.StringHttpMessageConverter">
    			<property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
    		</bean>
    	</mvc:message-converters>
    </mvc:annotation-driven>
    
	<!-- FreeMarker视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
	    <property name="contentType" value="text/html; charset=UTF-8"/>
	    <property name="cache" value="false"/>
	    <property name="viewNames" value="*.ftl,*.html" />
        <property name="suffix" value=""/>
        <property name="order" value="1"/>
        <!-- 将请求和会话属性作为变量暴露给FreeMarker模板使用。要做到这一点，可以设置exposeRequestAttributes或者exposeSessionAttributes为true -->
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
	</bean>
	
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
	    <property name="templateLoaderPath" value="/WEB-INF/page/"/>
	    <property name="defaultEncoding" value="UTF-8" />
		<!-- user-defined directives -->
		<!-- <property name="freemarkerVariables">设置常用的全局变量
			<map>
				<entry key="schoolDirective" value-ref="schoolDirectiveModel" />
				<entry key="footerDirective" value-ref="footerDirectiveModel" />
				<entry key="headerNavigationDirective" value-ref="headerNavigationDirectiveModel" />
				<entry key="footerNavigationDirective" value-ref="footerNavigationDirectiveModel" />
				<entry key="teacherDirective" value-ref="teacherDirectiveModel" />
				<entry key="prettyTime" value-ref="prettyTimeMethodModel" />
				
				<entry key="headerImageDirective" value-ref="headerImageDirectiveModel" />
				<entry key="judgeLiveStatus" value-ref="judgeLiveStatusMethodModel" />
			</map>
		</property> -->
		<!-- FreeMarker setting -->
		<property name="freemarkerSettings">
			<props>
				<prop key="number_format">#</prop> <!-- 数字不包含逗号 --><!-- 设置数字格式 以免出现 000.00 -->  
			</props>
		</property>
	</bean>
	
	<!-- JSP视图解析器  -->
    <bean id="viewResolverJsp" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/page/"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="viewNames" value="*.jsp" />
        <property name="suffix" value=""/>
        <property name="order" value="2"/>
    </bean>
    
    <!-- 对静态资源的访问 -->
    <mvc:resources mapping="/static/**" location="/static/" />
    
    <!-- 拦截器，访问受限资源前判断是否登陆 -->
    <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.school.interceptor.SecureOperationInterceptor">
				<!-- 不需要拦截的地址 -->
				<!-- <property name="excludeUris">
					<list>
						<value>/secure/login</value>
					</list>
				</property> -->
			</bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
    <!-- Kaptcha验证码生成器 -->
	<bean name="producer" class="com.google.code.kaptcha.impl.DefaultKaptcha" scope="singleton">
	    <property name="config">
	        <bean class="com.google.code.kaptcha.util.Config">
	            <constructor-arg>
	                <props>
	                    <prop key="kaptcha.border">no</prop>
	                    <prop key="kaptcha.textproducer.font.color">black</prop>
	                    <prop key="kaptcha.textproducer.char.space">5</prop>
	                    <prop key="kaptcha.textproducer.char.length">4</prop>
	                    <prop key="kaptcha.image.width">145</prop>
	                    <prop key="kaptcha.image.height">50</prop>
	                </props>
	            </constructor-arg>
	        </bean>
	    </property>
	</bean>
</beans>