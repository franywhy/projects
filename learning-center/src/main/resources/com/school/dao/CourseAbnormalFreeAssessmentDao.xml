<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.school.dao.CourseAbnormalFreeAssessmentDao">

		
	<!-- 通用查询表头 -->
	<sql id="base_column">
	course_abnormal_free_assessment.id AS id ,	course_abnormal_free_assessment.start_time AS startTime ,course_abnormal_free_assessment.end_time AS endTime ,
	course_abnormal_free_assessment.audit_status AS auditStatus , 	course_abnormal_free_assessment.abnormal_reason AS abnormalReason ,
	course_abnormal_free_assessment.remark AS remark ,
    courses.course_name AS courseName,mall_order.order_name AS orderName
</sql>
	<!-- 通用查询条件 -->
	<sql id="base_where">
    	WHERE 1=1
		<if test="auditStatus != null">and course_abnormal_free_assessment.audit_status = #{auditStatus} </if>
		<if test="userId != null">and mall_order.user_id = #{userId} </if>
		and course_abnormal_free_assessment.product_id IN
		(
		select
		product_id
		from sys_business_product
		where business_id = #{businessId}
		)
</sql>
	<!-- 通用from -->
	<sql id="base_from">
    	 FROM course_abnormal_free_assessment AS course_abnormal_free_assessment
    	 left join mall_order  on course_abnormal_free_assessment.order_id=mall_order.order_id
		 left join courses  AS courses on course_abnormal_free_assessment.course_id=courses.course_id
	</sql>
	<!-- 通用排序 -->
	<sql id="base_order">
    	 ORDER BY  id DESC
	</sql>
	
	<!--根据ID查询-->
	<select id="queryPojoObject" resultType="com.school.pojo.CourseAbnormalFreeAssessmentPOJO">
		select 
      	<include refid="base_column"/>
		<include refid="base_from"/>
		where  id = #{id}
	</select>
	<!--根据ID查询-->
	<select id="verifyStatus" resultType="com.school.pojo.CourseAbnormalFreeAssessmentPOJO">
		select
		<include refid="base_column"/>
		<include refid="base_from"/>
		where course_abnormal_free_assessment.audit_status  != 1
		and course_abnormal_free_assessment.order_id = #{orderId}
		and course_abnormal_free_assessment.course_id = #{courseId}
		and (course_abnormal_free_assessment.end_time  &gt;= #{startTime}
		or course_abnormal_free_assessment.end_time is null
		)
		limit 0,1
	</select>
	<!--分页列表-->
	<select id="queryPojoList" resultType="com.school.pojo.CourseAbnormalFreeAssessmentPOJO">
		select
		<include refid="base_column"/>
		<include refid="base_from"/> 
		<include refid="base_where"/>
		<include refid="base_order"/>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	<!--新增-->
	<insert id="save" parameterType="com.school.entity.CourseAbnormalFreeAssessmentEntity">
		insert into course_abnormal_free_assessment
		(
				`order_id`, 	`course_id`,			`start_time`, `end_time`,				`abnormal_reason`,				`audit_status`, 				`remark`, 				`create_person`, 				`modify_person`, 				`modified_time`, 				`update_person`, 				`update_time`, 				`orderno`, 				`product_id`		)
		values
		(
				#{orderId}, 	#{courseId},			#{startTime}, #{endTime},				#{abnormalReason},				#{auditStatus}, 				#{remark}, 				#{createPerson}, 				#{modifyPerson}, 				#{modifiedTime}, 				#{updatePerson}, 				#{updateTime}, 				#{orderno}, 				#{productId}		)
	</insert>
	
	<!--批量反审核或作废-->
	<update id="updateCancel">
		update course_abnormal_free_assessment
		<set>
			audit_status = #{auditStatus},update_person = #{updatePerson},update_time = #{updateTime}
		</set>
		where  id =#{id}
	</update>

    <!-- 根据订单查询规划id -->
    <select id="queryUserPlanId" parameterType="string" resultType="string">
        select user_plan_id from course_userplan where order_id = #{orderId}
        and  dr = 0
    </select>
    <!-- 根据学员规划ID查询课程列表 -->
    <select id="courseListByUserPlanId" resultType="map">
        select
        ud.course_id as courseId,
        c.course_name as courseName
        from course_userplan_detail ud
        JOIN courses c ON c.course_id = ud.course_id
        where ud.userplan_id = #{userPlanId}
        and ud.dr = 0
        order by ud.course_id desc
    </select>
</mapper>