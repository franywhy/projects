<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/aop   
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/mvc  
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">

	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven />

	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.school.controller,com.kuaiji.controller,com.contract.controller" />
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/apptest.html" location="/apptest.html"/>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/learningCenter/**" />
	        <bean class="com.school.interceptor.TokenHandlerInterceptor"/>
		</mvc:interceptor>
	    
	</mvc:interceptors>
	
	<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean> -->
	
	<!-- CSRF Token Manager -->
	<!-- <bean id="csrfTokenManager" class="com.school.web.csrf.DefaultCsrfTokenManager">
		<property name="tokenName" value="csrfToken" />
	</bean> -->

	<!-- 定义跳转的文件的前后缀 ，视图模式配置 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="10" />
	</bean>
	
	<!-- FreeMarker configuration -->
	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/freemarker/" /><!-- 扫描.ftl的模板文件 -->
		<property name="defaultEncoding" value="UTF-8" />
		<!-- user-defined directives -->
		<property name="freemarkerVariables"><!-- 设置常用的全局变量 -->
			<map>
				<entry key="getAccFun" value-ref="getAccFun" />
				<entry key="getAccFunForAll" value-ref="getAccFunForAll" />
				<entry key="getYouShang" value-ref="getYouShang" />
				<entry key="encodeFun" value-ref="EncodeURLModel"/> 
				<!-- <entry key="schoolDirective" value-ref="schoolDirectiveModel" />
				<entry key="footerDirective" value-ref="footerDirectiveModel" />
				<entry key="headerNavigationDirective" value-ref="headerNavigationDirectiveModel" />
				<entry key="footerNavigationDirective" value-ref="footerNavigationDirectiveModel" />
				<entry key="teacherDirective" value-ref="teacherDirectiveModel" />
				<entry key="prettyTime" value-ref="prettyTimeMethodModel" />
				
				<entry key="headerImageDirective" value-ref="headerImageDirectiveModel" />
				<entry key="judgeLiveStatus" value-ref="judgeLiveStatusMethodModel" /> -->
			</map>
		</property>
		<!-- FreeMarker setting -->
		<property name="freemarkerSettings">
			<props>
				<prop key="number_format">#</prop> <!-- 数字不包含逗号 --><!-- 设置数字格式 以免出现 000.00 -->  
				<!-- <prop key="template_exception_handler">com.school.freemarker.SchoolTemplateExceptionHandler</prop> -->
			</props>
		</property>
	</bean>
	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<!-- 自定义FreeMarkerView，用来定义项目的全局路径 -->
	    <property name="viewClass" value="com.school.web.view.MyFreeMarkerView" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="9"></property>
		<!-- 使用这些宏，必须设置FreeMarkerViewResolver的exposeMacroHelpers属性为true -->
		<property name="exposeSpringMacroHelpers" value="true" />
		<!-- 将请求和会话属性作为变量暴露给FreeMarker模板使用。要做到这一点，可以设置exposeRequestAttributes或者exposeSessionAttributes为true -->
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="requestContextAttribute" value="request" />
	</bean>

	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760000" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
</beans>